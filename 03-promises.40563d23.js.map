{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,mBAChCC,EAAUF,SAASC,cAAc,SAEvCF,EAAOI,iBAAiB,SAExB,SAAyBC,GACzBA,EAAIC,iBACJ,MAAMC,EAAW,IAAIC,SAASL,GACxBM,EAAQF,EAASG,IAAI,SACrBC,EAAOJ,EAASG,IAAI,QACpBE,EAASL,EAASG,IAAI,UAC5B,IAAIG,EAAQ,EACZC,YAAW,KACT,IAAIC,EAAaC,aAAY,CAACC,EAAUC,KAEtC,GAAIL,EAAQD,EAaV,OAXAC,GAAS,OAuBf,SAAuBM,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAACN,E,MAAUC,IAGnBM,EAAO,C,SAACP,E,MAAUC,GAAO,G,CA7BzBO,CAAcV,EAAUC,GACvBU,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,QAAQC,IAAI,uBAAqBX,QAAiBC,OAClDtB,EAAAiC,OAAOC,QAAQ,uBAAqBb,QAAiBC,MAAU,IAEhEa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAElBS,QAAQC,IAAI,sBAAoBX,QAAiBC,OACjDtB,EAAAiC,OAAOG,QAAQ,sBAAoBf,QAAeC,MAAU,IAIhEe,cAAcpB,EAAW,GAEzBJ,EAAK,GAGPF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst btnRef = document.querySelector('.js-promise-btn');\nconst formRef = document.querySelector('.form');\n\nbtnRef.addEventListener('click', onCreatePromise);\n\nfunction onCreatePromise(evt) {\nevt.preventDefault();\nconst formData = new FormData(formRef);\nconst delay = formData.get(\"delay\");\nconst step = formData.get(\"step\");\nconst amount = formData.get(\"amount\");\nlet count = 0;\nsetTimeout(()=>{\n  let intervalId = setInterval((position, delay)=>{\n  \n    if (count < amount)\n    {\n      count += 1;\n      createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n  \n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      return;\n    }\n    clearInterval(intervalId);\n  \n  },step)\n}\n\n, delay)\n\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject)=> {\n    if (shouldResolve) {\n      resolve({position, delay});\n      // Fulfill\n    } else {\n      reject({position, delay});\n      // Reject\n    }\n  })\n  \n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$btnRef","document","querySelector","$47d4ff9957288465$var$formRef","addEventListener","evt","preventDefault","formData","FormData","delay1","get","step","amount","count","setTimeout","intervalId","setInterval","position1","delay2","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","console","log","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.40563d23.js.map"}